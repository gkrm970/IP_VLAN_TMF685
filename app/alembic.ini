# A generic, single database configuration.

[alembic]
# path to migration scripts
script_location = alembic

# Template used to generate migration file names;
# See https://alembic.sqlalchemy.org/en/latest/tutorial.html#editing-the-ini-file
# for all available tokens
file_template = %%(year)d_%%(month).2d_%%(day).2d_%%(hour).2d%%(minute).2d-%%(rev)s_%%(slug)s

# sys.path path, will be prepended to sys.path if present.
# defaults to the current working directory.
prepend_sys_path = .

# Timezone to use when rendering the date within the migration file as well as the
# filename. If specified, requires the python-dateutil library that can be installed by
# adding `alembic[tz]` to the pip requirements. String value is passed to
# dateutil.tz.gettz()
timezone = UTC

# Version location specification; This defaults to alembic/versions. When using multiple
# version directories, initial revisions must be specified with --version-path.
# The path separator used here should be the separator specified by
# "version_path_separator" below.
# version_locations = %(here)s/bar:%(here)s/bat:alembic/versions

# Version path separator; As mentioned above, this is the character used to split
# version_locations. The default within new alembic.ini files is "os", which uses
# os.pathsep.
# version_path_separator = :
# version_path_separator = ;
# version_path_separator = space
version_path_separator = os  # Use os.pathsep.

# The output encoding used when revision files are written from script.py.mako
output_encoding = utf-8


[post_write_hooks]
# post_write_hooks defines scripts or Python functions that are run on newly generated
# revision scripts.  See the documentation for further detail and examples

# Format using "black" - use the console_scripts runner, against the "black" entrypoint
hooks = autoflake, black, isort
autoflake.type = console_scripts
autoflake.entrypoint = autoflake

black.type = console_scripts
black.entrypoint = black

isort.type = console_scripts
isort.entrypoint = isort

# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console
qualname =

[logger_sqlalchemy]
level = INFO
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = [%(asctime)s] [%(levelname)-5.5s] [%(name)s] %(message)s
datefmt = %H:%M:%S
